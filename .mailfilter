# logfile "$HOME/mailfilter.log"
MAILDIR="$HOME/Maildir"

# Check if we're called from a .qmail-EXT instead of .qmail
import EXT
if ( $EXT )
{
  # Does a vmailmgr user named $EXT exist?
  # If yes, deliver mail to his Maildir instead
  CHECKMAILDIR = `dumpvuser $EXT | grep '^Directory' | awk '{ print $2 }'`
  if ( $CHECKMAILDIR )
  {
    MAILDIR="$HOME/$CHECKMAILDIR"
  }
}

# Test spam folder structure
`test -d "$MAILDIR/.0 Spamfilter"`
if( $RETURNCODE == 1 )
{
  `maildirmake "$MAILDIR/.0 Spamfilter"`
}
`test -d "$MAILDIR/.0 Spamfilter.als Spam erkannt"`
if( $RETURNCODE == 1 )
{
  `maildirmake "$MAILDIR/.0 Spamfilter.als Spam erkannt"`
}
`test -d "$MAILDIR/.0 Spamfilter.als Spam lernen"`
if( $RETURNCODE == 1 )
{
  `maildirmake "$MAILDIR/.0 Spamfilter.als Spam lernen"`
}
`test -d "$MAILDIR/.0 Spamfilter.als Ham lernen"`
if( $RETURNCODE == 1 )
{
  `maildirmake "$MAILDIR/.0 Spamfilter.als Ham lernen"`
}

# Show the mail to DSPAM
xfilter "/package/host/localhost/dspam/bin/dspam --mode=teft --deliver=innocent,spam --stdout"

# If whitelisted by DSPAM just deliver
if ( /^X-DSPAM-Result: Whitelisted/)
{
  to "$MAILDIR"
}

# Process SPAM
if ( /^X-DSPAM-Result: Spam/)
{
  MAILDIR="$MAILDIR/.0 Spamfilter.als Spam erkannt"
  # Mark as read
  cc "$MAILDIR";
  `find "$MAILDIR/new/" -mindepth 1 -maxdepth 1 -type f -printf '%f\0' | xargs -0 -I {} mv "$MAILDIR/new/{}" "$MAILDIR/cur/{}:2,S"`
  exit
}

# Default rule
to "$MAILDIR"
